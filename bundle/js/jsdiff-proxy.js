(()=>{"use strict";const e={EMPTY:"(empty)",UNDEFINED:"(undefined)",NULL:"(null)",NATIVE_FUNCTION:"ƒ(native)",EXCEPTION_FALLBACK:"⁉️(exception)",EXCEPTION:e=>`⁉️(${e})`,RECURRING_ARRAY:e=>`0x${e}: [♻️]`,RECURRING_OBJECT:e=>`0x${e}: {♻️}`,RECURRING_SET:e=>`0x${e}: Set[♻️]`,RECURRING_MAP:e=>`0x${e}: Map{♻️}`,UNSERIALIZABLE:e=>`0x${e}: unserializable`,SYMBOL:(e,t)=>`0x${t}: ${e}`,FUNCTION:(e,t)=>`ƒ${e?` ${e}`:""}(${t})`,NUMERIC:e=>"bigint"==typeof e?`BigInt(${e})`:`Number(${e})`},t={NO_CONNECTION:"Could not establish connection. Receiving end does not exist.",PORT_CLOSED:"The message port closed before a response was received.",QUOTA_EXCEEDED:"QUOTA_BYTES quota exceeded"};function o(e){(function(e){return!e||e.message===t.NO_CONNECTION||e.message===t.PORT_CLOSED})(chrome.runtime.lastError)||console.error(chrome.runtime.lastError)}var s,r;window.addEventListener("message",(s=function(e){chrome.runtime.sendMessage({source:"jsdiff-proxy-to-panel-inprogress",on:e.data.on},o)},r=async function(s){const r=s.data.payload,{lastApiReq:a}=await chrome.storage.local.get(["lastApiReq"]),n=function(t,o){t||(t={left:e.EMPTY,right:e.EMPTY,timestamp:Date.now()});const s=t;return Reflect.has(o,"push")?(s.left=s.right,s.right=o.push):(Reflect.has(o,"left")&&(s.left=o.left),Reflect.has(o,"right")&&(s.right=o.right)),s.timestamp=o.timestamp,s}(a,r);try{await chrome.storage.local.set({lastApiReq:n,lastError:""}),chrome.runtime.sendMessage({source:"jsdiff-proxy-to-panel-compare"},o)}catch(e){e?.message===t.QUOTA_EXCEEDED?(await chrome.storage.local.set({lastError:t.QUOTA_EXCEEDED}),chrome.runtime.sendMessage({source:"jsdiff-proxy-to-panel-error"},o)):e?.message&&console.error("Unhnadled",e.message)}},function(e){e.origin===window.location.origin&&e.source===window&&"object"==typeof e.data&&null!==e.data&&("jsdiff-console-to-proxy-inprogress"===e.data.source?s(e):"jsdiff-console-to-proxy-compare"===e.data.source&&r(e))}))})();